/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jasmi
 */
public class confirm_schedule extends javax.swing.JFrame {

    /**
     * Creates new form confirm_schedule
     */
    String username = "";
     String idstaff = "";
    
    public confirm_schedule(String user,String staffid) {
        initComponents();
        setTitle("Health Care Fees Payment System");
         this.setLocationRelativeTo(null);
        setVisible(true);
        setResizable(false);
        confirm_schedule.setDragEnabled(false);
        confirm_schedule.setDefaultEditor(Object.class, null);
        showDateTime();
        fillcombotrainer();
        username = user;
        idstaff = staffid;
    }

     private void fillcombotrainer() {      
        String role = "Trainer";
        File file = new File("Profile.txt");
        
        Scanner sc;
            try {    
                sc = new Scanner(file);
                
       String temp;
       boolean found = false;
       while(sc.hasNext() && !found /*the system will stop running while it found the correct username and password*/){
           temp = sc.nextLine(); //read a line of text from file
           String[] tempArr;
            tempArr = temp.split (",");

               if (role.equals(tempArr[7])){
              //needed value in array
                String valueneeded = tempArr[1];
                String [] column = valueneeded.split(",");
                   for (String column1 : column) {
                   cboxtrainer.addItem(column1);
               }
               }             
            }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(check_schedule.class.getName()).log(Level.SEVERE, null, ex);
            }    
    }        
       private void showDateTime() {
        //get current date and time
       Date date = new Date();
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy (EEEE)");
        lblshowdate.setText(df.format(date)); 
        DateFormat tf = new SimpleDateFormat("hh:mm:ss a");        
       
        int interval = 1000;
        new Timer(interval, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
                Calendar now = Calendar.getInstance();
                lblshowtime.setText(tf.format(now.getTime()));
            }
        }).start();
      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        confirm_schedule = new javax.swing.JTable();
        lbltrainer = new javax.swing.JLabel();
        cboxtrainer = new javax.swing.JComboBox<>();
        lbldate = new javax.swing.JLabel();
        lbltime = new javax.swing.JLabel();
        btnreturn = new javax.swing.JButton();
        lblshowdate = new javax.swing.JLabel();
        lblshowtime = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbltitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        confirm_schedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(confirm_schedule);

        lbltrainer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbltrainer.setText("Trainer");

        cboxtrainer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboxtrainer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxtrainerActionPerformed(evt);
            }
        });

        lbldate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbldate.setText("Date");

        lbltime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbltime.setText("Time");

        btnreturn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnreturn.setText("Return");
        btnreturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreturnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 99, 71));

        lbltitle.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("Schedule");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 845, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbltrainer)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblshowdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboxtrainer, 0, 151, Short.MAX_VALUE))
                                .addGap(276, 276, 276)
                                .addComponent(lbltime)
                                .addGap(18, 18, 18)
                                .addComponent(lblshowtime, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbldate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnreturn)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lbldate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblshowdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblshowtime, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(btnreturn))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(lbltime))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltrainer)
                    .addComponent(cboxtrainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxtrainerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxtrainerActionPerformed
        //to show the schedule when the trainer is chosen
        String trainer = cboxtrainer.getSelectedItem().toString();
        String filepath = "C:\\Users\\jasmi\\Documents\\NetBeansProjects\\JP\\T001_schedule.txt";
        File file = new File(filepath);

        BufferedReader br;
        String strLine;
        try {
            br = new BufferedReader (new FileReader(file));
            //while((strLine=br.readLine())!=null){

                String[] columnName = {"Course", "Time", "Date" , "Fee", "Venue", "Trainer"};

                DefaultTableModel model = (DefaultTableModel)confirm_schedule.getModel();
                model.setColumnIdentifiers(columnName);
                model.setRowCount(0); //clear the model
                confirm_schedule.revalidate(); //refresh the table
                try {
                    while((strLine=br.readLine())!=null){
                        Object[] details = strLine.lines().toArray();
                        for (Object detail : details) {
                            String line = detail.toString().trim();
                            String[] row = line.split(",");

                            if (trainer.equals(row[5])) {
                                model.addRow(row);
                            }
                        }

                    }   } catch (IOException ex) {
                        Logger.getLogger(check_schedule.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (IOException ex) {
                    Logger.getLogger(check_schedule.class.getName()).log(Level.SEVERE, null, ex);
                }

    }//GEN-LAST:event_cboxtrainerActionPerformed

    private void btnreturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreturnActionPerformed
        new charge_student(username,idstaff).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnreturnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(confirm_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(confirm_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(confirm_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(confirm_schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnreturn;
    private javax.swing.JComboBox<String> cboxtrainer;
    private javax.swing.JTable confirm_schedule;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lblshowdate;
    private javax.swing.JLabel lblshowtime;
    private javax.swing.JLabel lbltime;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JLabel lbltrainer;
    // End of variables declaration//GEN-END:variables
}
